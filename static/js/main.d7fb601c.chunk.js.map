{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoInfo","title","className","UserInfo","name","user","href","TodoList","todos","map","userId","id","username","email","completed","preparedTodos","todosFromServer","todo","usersFromServer","find","userss","App","useState","setName","users","userName","setUser","setTodos","action","method","onSubmit","event","preventDefault","newTodo","length","addTodo","type","placeholder","value","onChange","target","needUser","item","selected","disabled","ReactDOM","render","document","getElementById"],"mappings":"sMAMaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,mCACE,oBAAIC,UAAU,kBAAd,SACGD,OCHIE,EAA4B,SAAC,GAAc,IAC9CC,EAD6C,EAAXC,KAClCD,KAER,OACE,mCACE,mBAAGF,UAAU,WAAWI,KAAK,2BAA7B,SACGF,OCJIG,EAA4B,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,SACvC,6BACGA,EAAMC,KAAI,gBACTC,EADS,EACTA,OAAQT,EADC,EACDA,MAAOI,EADN,EACMA,KADN,OAGT,qBAEEH,UAAU,+BAFZ,UAIE,cAAC,EAAD,CAAUD,MAAOA,IAChBI,GAAQ,cAAC,EAAD,CAAUA,KAAMA,MAJpBK,SCfE,GACb,CACEC,GAAI,EACJP,KAAM,gBACNQ,SAAU,OACVC,MAAO,qBAET,CACEF,GAAI,EACJP,KAAM,eACNQ,SAAU,YACVC,MAAO,qBAET,CACEF,GAAI,EACJP,KAAM,mBACNQ,SAAU,WACVC,MAAO,sBAET,CACEF,GAAI,EACJP,KAAM,mBACNQ,SAAU,WACVC,MAAO,6BAET,CACEF,GAAI,EACJP,KAAM,mBACNQ,SAAU,SACVC,MAAO,4BAET,CACEF,GAAI,EACJP,KAAM,uBACNQ,SAAU,mBACVC,MAAO,2BAET,CACEF,GAAI,EACJP,KAAM,kBACNQ,SAAU,eACVC,MAAO,0BAET,CACEF,GAAI,EACJP,KAAM,2BACNQ,SAAU,gBACVC,MAAO,wBAET,CACEF,GAAI,EACJP,KAAM,kBACNQ,SAAU,WACVC,MAAO,2BAET,CACEF,GAAI,GACJP,KAAM,qBACNQ,SAAU,iBACVC,MAAO,2BC3DI,GACb,CACEF,GAAI,EACJV,MAAO,qBACPa,WAAW,EACXJ,OAAQ,GAEV,CACEC,GAAI,GACJV,MAAO,kBACPa,WAAW,EACXJ,OAAQ,GAEV,CACEC,GAAI,EACJV,MAAO,qCACPa,WAAW,EACXJ,OAAQ,ICRNK,EAAwBC,EAAgBP,KAAI,SAAAQ,GAAI,kCACjDA,GADiD,IAEpDZ,KAAMa,EAAgBC,MAAK,SAAAC,GAAM,OAAIA,EAAOT,KAAOM,EAAKP,WAAW,UAGxDW,EAAM,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAA4BD,mBAASJ,EAClCC,MAAK,SAAAK,GAAK,OAAIR,EACZG,MAAK,SAAAF,GAAI,OAAIO,EAAMb,KAAOM,EAAKP,cAAY,MAFhD,mBAAOe,EAAP,KAAiBC,EAAjB,KAGA,EAA0BJ,mBAAQ,YAAaP,IAA/C,mBAAOP,EAAP,KAAcmB,EAAd,KAsBA,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBACE0B,OAAO,eACPC,OAAO,SACPC,SAfe,SAACC,GACpBA,EAAMC,iBAbQ,SAAC/B,EAAeI,GAC9B,IAAM4B,EAAU,CACdtB,GAAII,EAAcmB,OAAS,EAC3BxB,OAAQ,EACRT,QACAI,OACAS,WAAW,GAGba,EAAS,GAAD,mBAAKnB,GAAL,CAAYyB,KAKpBE,CAAQ/B,EAAMqB,IAUZ,UAKE,sBAAKvB,UAAU,QAAf,kBAEG,IACD,uBACEkC,KAAK,OACL,UAAQ,aACRC,YAAY,eACZC,MAAOlC,EACPmC,SAAU,SAACR,GACTR,EAAQQ,EAAMS,OAAOF,aAM3B,sBAAKpC,UAAU,QAAf,kBAEE,yBACEE,KAAK,QACLO,GAAG,IACH4B,SAAU,SAACR,GACT,IAAQO,EAAUP,EAAMS,OAAhBF,MACFG,EAAWvB,EACdC,MAAK,SAAAuB,GAAI,OAAIA,EAAKtC,OAASkC,KAE9BZ,EAAQe,GAAY,OARxB,UAWE,wBACEH,MAAM,IACNK,UAAQ,EACRC,UAAQ,EAHV,2BAOE1B,EACCT,KAAI,SAAAe,GAAK,OACR,wBAAQc,MAAOd,EAAMpB,KAArB,SAA4BoB,EAAMpB,gBAM1C,wBACEgC,KAAK,SACL,UAAQ,eAFV,oBAQF,yBAASlC,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUM,MAAOO,UCnGzB8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.d7fb601c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  title: string;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title }) => {\n  return (\n    <>\n      <h1 className=\"TodoInfo__title\">\n        {title}\n      </h1>\n    </>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name } = user;\n\n  return (\n    <>\n      <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n        {name}\n      </a>\n    </>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport '../../App.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <ul>\n    {todos.map(({\n      userId, title, user,\n    }) => (\n      <li\n        key={userId}\n        className=\"TodoInfo TodoInfo--completed\"\n      >\n        <TodoInfo title={title} />\n        {user && <UserInfo user={user} />}\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(userss => userss.id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [name, setName] = useState('');\n  const [userName, setUser] = useState(usersFromServer\n    .find(users => todosFromServer\n      .find(todo => users.id === todo.userId)) || null);\n  const [todos, setTodos] = useState<Todo[]>([...preparedTodos]);\n\n  const addTodo = (title: string, user: User | null) => {\n    const newTodo = {\n      id: preparedTodos.length + 1,\n      userId: 1,\n      title,\n      user,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo(name, userName);\n  };\n\n  // const errorTitle = <span className=\"error\">Please enter a title</span>;\n  // const errorUser = <span className=\"error\">Please choose a user</span>;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\" /api/users \"\n        method=\" POST \"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Name:\n          {' '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a name\"\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          />\n\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            name=\"users\"\n            id=\"0\"\n            onChange={(event) => {\n              const { value } = event.target;\n              const needUser = usersFromServer\n                .find(item => item.name === value);\n\n              setUser(needUser || null);\n            }}\n          >\n            <option\n              value=\"0\"\n              selected\n              disabled\n            >\n              Choose a user\n            </option>\n            { usersFromServer\n              .map(users => (\n                <option value={users.name}>{users.name}</option>\n              ))}\n          </select>\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={preparedTodos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}