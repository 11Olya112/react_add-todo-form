{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","preparedTodos","todosFromServer","usersFromServer","find","users","usersFromServerFilter","App","useState","setName","userSelect","setUserSelect","setTodos","formKey","setFormKey","isErrorName","setIsErrorName","isErrorUser","setIsErrorUser","currentUserId","setCurrentUserId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","addTodo","type","placeholder","value","onChange","target","needUser","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f50e9d1.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h1 className=\"TodoInfo__title\">\n      {todo.title}\n    </h1>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport '../../App.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(users => users.id === todo.userId) || null,\n}));\n\nconst usersFromServerFilter = usersFromServer\n  .find(users => todosFromServer\n    .find(todo => users.id === todo.userId)) || null;\n\nexport const App = () => {\n  const [name, setName] = useState('');\n  const [userSelect, setUserSelect] = useState(usersFromServerFilter);\n  const [todos, setTodos] = useState<Todo[]>([...preparedTodos]);\n\n  const [formKey, setFormKey] = useState(10);\n  const [isErrorName, setIsErrorName] = useState(false);\n  const [isErrorUser, setIsErrorUser] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(0);\n\n  const id = Math.max(...todos.map(todo => todo.id));\n\n  const addTodo = (title: string, user: User | null) => {\n    const newTodo = {\n      id: id + 1,\n      userId: 1,\n      title,\n      user,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsErrorName(!name);\n\n    setIsErrorUser(!currentUserId);\n\n    if (name && currentUserId) {\n      addTodo(name, userSelect);\n      setName('');\n      setFormKey(formKey + 1);\n    }\n  };\n\n  const handle = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n    const { value } = event.target;\n    const needUser = usersFromServer.find(\n      item => item.name === value,\n    );\n\n    setUserSelect(needUser || null);\n    setCurrentUserId(1);\n  };\n\n  const errorTitle = 'Please enter a title';\n  const errorUser = 'Please choose a user';\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        key={formKey}\n        action=\" /api/users \"\n        method=\" POST \"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Name:\n          {' '}\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a name\"\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n              setIsErrorName(!name);\n            }}\n          />\n          {isErrorName && <span className=\"error\">{errorTitle}</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            name=\"users\"\n            id=\"0\"\n            onChange={handle}\n          >\n            <option>Choose a user</option>\n\n            {usersFromServer.map(users => (\n              <option\n                key={users.id}\n              >\n                {users.name}\n              </option>\n            ))}\n\n          </select>\n\n          {(isErrorUser) && <span className=\"error\">{errorUser}</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}