{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoInfo","title","todoStatus","completed","UserInfo","user","className","href","name","TodoList","todos","map","userId","classNames","TodoInfo__completed","id","username","email","preparedTodos","todosFromServer","todo","usersFromServer","find","users","usersFromServerFilter","App","useState","setName","userSelect","setUserSelect","setTodos","formKey","setFormKey","isErrorName","setIsErrorName","isErrorUser","setIsErrorUser","currentUserId","setCurrentUserId","errorTitle","errorUser","action","method","onSubmit","event","preventDefault","newTodo","length","addTodo","type","placeholder","value","onChange","target","needUser","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f295e0c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  title: string;\n  completed: boolean;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, completed }) => {\n  const todoStatus = completed === false ? 'Not done' : 'Done';\n\n  return (\n    <>\n      <h1 data-cy=\"title\">\n        {title}\n      </h1>\n\n      <div data-cy=\"status\">\n        {todoStatus}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport '../../App.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <ul>\n    {todos.map(({\n      userId, title, completed, user,\n    }) => (\n      <li\n        key={userId}\n        className={classNames('TodoInfo',\n          { TodoInfo__completed: completed === true })}\n      >\n        <TodoInfo\n          title={title}\n          completed={completed}\n        />\n\n        {user && <UserInfo user={user} />}\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(users => users.id === todo.userId) || null,\n}));\n\nconst usersFromServerFilter = usersFromServer\n  .find(users => todosFromServer\n    .find(todo => users.id === todo.userId)) || null;\n\nexport const App = () => {\n  const [name, setName] = useState('');\n  const [userSelect, setUserSelect] = useState(usersFromServerFilter);\n  const [todos, setTodos] = useState<Todo[]>([...preparedTodos]);\n\n  const [formKey, setFormKey] = useState(10);\n  const [isErrorName, setIsErrorName] = useState(false);\n  const [isErrorUser, setIsErrorUser] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(0);\n\n  const addTodo = (title: string, user: User | null) => {\n    const newTodo = {\n      id: preparedTodos.length + 1,\n      userId: 1,\n      title,\n      user,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsErrorName(() => (name === ''));\n\n    setIsErrorUser(() => (currentUserId === 0));\n\n    if (name !== '' && currentUserId !== 0) {\n      addTodo(name, userSelect);\n      setName('');\n      setFormKey(formKey + 1);\n    }\n  };\n\n  const errorTitle = <span className=\"error\">Please enter a title</span>;\n  const errorUser = <span className=\"error\">Please choose a user</span>;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        key={formKey}\n        action=\" /api/users \"\n        method=\" POST \"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Name:\n          {' '}\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a name\"\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          />\n          {isErrorName && errorTitle}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            name=\"users\"\n            id=\"0\"\n            onChange={(event) => {\n              const { value } = event.target;\n              const needUser = usersFromServer.find(\n                item => item.name === value,\n              );\n\n              setUserSelect(needUser || null);\n              setCurrentUserId(1);\n            }}\n          >\n            <option> Choose a user </option>\n\n            { usersFromServer\n              .map(users => (\n                <>\n                  <option\n                    key={users.id}\n                  >\n                    {users.name}\n                  </option>\n                </>\n              ))}\n\n          </select>\n\n          {(isErrorUser) && errorUser}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}